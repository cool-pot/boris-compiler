; ModuleID = 'module-boris-input'
source_filename = "module-boris-input"
target triple = "x86_64-pc-linux-gnu"

@format_int = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.4 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.5 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.6 = private unnamed_addr constant [4 x i8] c"%d\0A\00"

define i32 @strlen(i8* %s) {
init:
  %i = alloca i32
  store i32 0, i32* %i
  br label %check

check:                                            ; preds = %body, %init
  %0 = load i32, i32* %i
  %1 = getelementptr i8, i8* %s, i32 %0
  %2 = load i8, i8* %1
  %3 = icmp ne i8 0, %2
  br i1 %3, label %body, label %end

body:                                             ; preds = %check
  %4 = load i32, i32* %i
  %5 = add i32 %4, 1
  store i32 %5, i32* %i
  br label %check

end:                                              ; preds = %check
  %6 = load i32, i32* %i
  ret i32 %6
}

declare i32 @printf(...)

define void @main() {
MainEntry:
  %x = alloca i32
  store i32 1, i32* %x
  br label %if_init_

if_init_:                                         ; preds = %MainEntry
  br label %if_check_

if_check_:                                        ; preds = %if_init_
  %load_singleid_int_temp = load i32, i32* %x
  %0 = icmp eq i32 %load_singleid_int_temp, 1
  br i1 %0, label %if_condition_one_, label %if_condition_two_

if_condition_one_:                                ; preds = %if_check_
  %1 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int, i32 0, i32 0), i32 1)
  br label %if_init_1

if_condition_two_:                                ; preds = %if_check_
  br label %else_init_

if_next_:                                         ; preds = %else_condition_two_11, %else_condition_one_10, %else_condition_one_, %if_next_5
  %2 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.6, i32 0, i32 0), i32 5)
  br label %EndEntry

if_init_1:                                        ; preds = %if_condition_one_
  br label %if_check_2

if_check_2:                                       ; preds = %if_init_1
  %load_singleid_int_temp6 = load i32, i32* %x
  %3 = icmp sgt i32 %load_singleid_int_temp6, 2
  br i1 %3, label %if_condition_one_3, label %if_condition_two_4

if_condition_one_3:                               ; preds = %if_check_2
  %4 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.1, i32 0, i32 0), i32 11)
  br label %if_next_5

if_condition_two_4:                               ; preds = %if_check_2
  %5 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.2, i32 0, i32 0), i32 12)
  br label %if_next_5

if_next_5:                                        ; preds = %if_condition_two_4, %if_condition_one_3
  br label %if_next_

else_init_:                                       ; preds = %if_condition_two_
  br label %else_check_

else_check_:                                      ; preds = %else_init_
  %load_singleid_int_temp7 = load i32, i32* %x
  %6 = icmp eq i32 %load_singleid_int_temp7, 2
  br i1 %6, label %else_condition_one_, label %else_condition_two_

else_condition_one_:                              ; preds = %else_check_
  %7 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.3, i32 0, i32 0), i32 2)
  br label %if_next_

else_condition_two_:                              ; preds = %else_check_
  br label %else_init_8

else_init_8:                                      ; preds = %else_condition_two_
  br label %else_check_9

else_check_9:                                     ; preds = %else_init_8
  %load_singleid_int_temp12 = load i32, i32* %x
  %8 = icmp eq i32 %load_singleid_int_temp12, 3
  br i1 %8, label %else_condition_one_10, label %else_condition_two_11

else_condition_one_10:                            ; preds = %else_check_9
  %9 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.4, i32 0, i32 0), i32 3)
  br label %if_next_

else_condition_two_11:                            ; preds = %else_check_9
  %10 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.5, i32 0, i32 0), i32 4)
  br label %if_next_

EndEntry:                                         ; preds = %if_next_
  ret void
}
