; ModuleID = 'module-boris-input'
source_filename = "module-boris-input"
target triple = "x86_64-pc-linux-gnu"

@format_int_0 = private unnamed_addr constant [4 x i8] c"%d,\00"
@format_int_1 = private unnamed_addr constant [3 x i8] c"%d\00"
@format_array_beg = private unnamed_addr constant [2 x i8] c"[\00"
@format_array_end = private unnamed_addr constant [3 x i8] c"]\0A\00"
@format_int_0.1 = private unnamed_addr constant [4 x i8] c"%d,\00"
@format_int_1.2 = private unnamed_addr constant [3 x i8] c"%d\00"
@format_tuple_beg = private unnamed_addr constant [2 x i8] c"(\00"
@format_tuple_end = private unnamed_addr constant [3 x i8] c")\0A\00"
@format_int_0.3 = private unnamed_addr constant [4 x i8] c"%d,\00"
@format_int_1.4 = private unnamed_addr constant [3 x i8] c"%d\00"
@format_tuple_beg.5 = private unnamed_addr constant [2 x i8] c"(\00"
@format_tuple_end.6 = private unnamed_addr constant [3 x i8] c")\0A\00"

define i32 @strlen(i8* %s) {
init:
  %i = alloca i32
  store i32 0, i32* %i
  br label %check

check:                                            ; preds = %body, %init
  %0 = load i32, i32* %i
  %1 = getelementptr i8, i8* %s, i32 %0
  %2 = load i8, i8* %1
  %3 = icmp ne i8 0, %2
  br i1 %3, label %body, label %end

body:                                             ; preds = %check
  %4 = load i32, i32* %i
  %5 = add i32 %4, 1
  store i32 %5, i32* %i
  br label %check

end:                                              ; preds = %check
  %6 = load i32, i32* %i
  ret i32 %6
}

declare i32 @printf(...)

define void @main() {
MainEntry:
  %mytuple = alloca i32, i32 3
  %0 = getelementptr i32, i32* %mytuple, i32 0
  store i32 1, i32* %0
  %1 = getelementptr i32, i32* %mytuple, i32 1
  store i32 2, i32* %1
  %2 = getelementptr i32, i32* %mytuple, i32 2
  store i32 3, i32* %2
  %myarray = alloca i32, i32 6
  %3 = getelementptr i32, i32* %myarray, i32 0
  store i32 10, i32* %3
  %4 = getelementptr i32, i32* %myarray, i32 1
  store i32 9, i32* %4
  %5 = getelementptr i32, i32* %myarray, i32 2
  store i32 8, i32* %5
  %6 = getelementptr i32, i32* %myarray, i32 3
  store i32 7, i32* %6
  %7 = getelementptr i32, i32* %myarray, i32 4
  store i32 6, i32* %7
  %8 = getelementptr i32, i32* %myarray, i32 5
  store i32 5, i32* %8
  %9 = call i32 (...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @format_array_beg, i32 0, i32 0))
  %10 = getelementptr i32, i32* %myarray, i32 0
  %11 = load i32, i32* %10
  %12 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0, i32 0, i32 0), i32 %11)
  %13 = getelementptr i32, i32* %myarray, i32 1
  %14 = load i32, i32* %13
  %15 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0, i32 0, i32 0), i32 %14)
  %16 = getelementptr i32, i32* %myarray, i32 2
  %17 = load i32, i32* %16
  %18 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0, i32 0, i32 0), i32 %17)
  %19 = getelementptr i32, i32* %myarray, i32 3
  %20 = load i32, i32* %19
  %21 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0, i32 0, i32 0), i32 %20)
  %22 = getelementptr i32, i32* %myarray, i32 4
  %23 = load i32, i32* %22
  %24 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0, i32 0, i32 0), i32 %23)
  %25 = getelementptr i32, i32* %myarray, i32 5
  %26 = load i32, i32* %25
  %27 = call i32 (...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @format_int_1, i32 0, i32 0), i32 %26)
  %28 = call i32 (...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @format_array_end, i32 0, i32 0))
  %29 = call i32 (...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @format_tuple_beg, i32 0, i32 0))
  %30 = getelementptr i32, i32* %mytuple, i32 0
  %31 = load i32, i32* %30
  %32 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0.1, i32 0, i32 0), i32 %31)
  %33 = getelementptr i32, i32* %mytuple, i32 1
  %34 = load i32, i32* %33
  %35 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0.1, i32 0, i32 0), i32 %34)
  %36 = getelementptr i32, i32* %mytuple, i32 2
  %37 = load i32, i32* %36
  %38 = call i32 (...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @format_int_1.2, i32 0, i32 0), i32 %37)
  %39 = call i32 (...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @format_tuple_end, i32 0, i32 0))
  %_temp_id_0 = alloca i32, i32 6
  %40 = getelementptr i32, i32* %mytuple, i32 0
  %41 = load i32, i32* %40
  %42 = getelementptr i32, i32* %mytuple, i32 1
  %43 = load i32, i32* %42
  %44 = getelementptr i32, i32* %mytuple, i32 2
  %45 = load i32, i32* %44
  %46 = getelementptr i32, i32* %_temp_id_0, i32 0
  store i32 0, i32* %46
  %47 = getelementptr i32, i32* %_temp_id_0, i32 1
  store i32 %41, i32* %47
  %48 = getelementptr i32, i32* %_temp_id_0, i32 2
  store i32 %43, i32* %48
  %49 = getelementptr i32, i32* %_temp_id_0, i32 3
  store i32 %45, i32* %49
  %50 = getelementptr i32, i32* %_temp_id_0, i32 4
  store i32 4, i32* %50
  %51 = getelementptr i32, i32* %_temp_id_0, i32 5
  store i32 5, i32* %51
  %52 = call i32 (...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @format_tuple_beg.5, i32 0, i32 0))
  %53 = getelementptr i32, i32* %_temp_id_0, i32 0
  %54 = load i32, i32* %53
  %55 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0.3, i32 0, i32 0), i32 %54)
  %56 = getelementptr i32, i32* %_temp_id_0, i32 1
  %57 = load i32, i32* %56
  %58 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0.3, i32 0, i32 0), i32 %57)
  %59 = getelementptr i32, i32* %_temp_id_0, i32 2
  %60 = load i32, i32* %59
  %61 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0.3, i32 0, i32 0), i32 %60)
  %62 = getelementptr i32, i32* %_temp_id_0, i32 3
  %63 = load i32, i32* %62
  %64 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0.3, i32 0, i32 0), i32 %63)
  %65 = getelementptr i32, i32* %_temp_id_0, i32 4
  %66 = load i32, i32* %65
  %67 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int_0.3, i32 0, i32 0), i32 %66)
  %68 = getelementptr i32, i32* %_temp_id_0, i32 5
  %69 = load i32, i32* %68
  %70 = call i32 (...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @format_int_1.4, i32 0, i32 0), i32 %69)
  %71 = call i32 (...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @format_tuple_end.6, i32 0, i32 0))
  br label %EndEntry

EndEntry:                                         ; preds = %MainEntry
  ret void
}
