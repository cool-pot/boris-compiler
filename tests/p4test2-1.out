; ModuleID = 'module-boris-input'
source_filename = "module-boris-input"
target triple = "x86_64-pc-linux-gnu"

@format_int = private unnamed_addr constant [4 x i8] c"%d\0A\00"

define i32 @strlen(i8* %s) {
init:
  %i = alloca i32
  store i32 0, i32* %i
  br label %check

check:                                            ; preds = %body, %init
  %0 = load i32, i32* %i
  %1 = getelementptr i8, i8* %s, i32 %0
  %2 = load i8, i8* %1
  %3 = icmp ne i8 0, %2
  br i1 %3, label %body, label %end

body:                                             ; preds = %check
  %4 = load i32, i32* %i
  %5 = add i32 %4, 1
  store i32 %5, i32* %i
  br label %check

end:                                              ; preds = %check
  %6 = load i32, i32* %i
  ret i32 %6
}

declare i32 @printf(...)

define void @main() {
MainEntry:
  %i = alloca i32
  store i32 5, i32* %i
  %myarray = alloca i32, i32 6
  %0 = getelementptr i32, i32* %myarray, i32 0
  store i32 10, i32* %0
  %1 = getelementptr i32, i32* %myarray, i32 1
  store i32 9, i32* %1
  %2 = getelementptr i32, i32* %myarray, i32 2
  store i32 8, i32* %2
  %3 = getelementptr i32, i32* %myarray, i32 3
  store i32 7, i32* %3
  %4 = getelementptr i32, i32* %myarray, i32 4
  store i32 6, i32* %4
  %5 = getelementptr i32, i32* %myarray, i32 5
  store i32 5, i32* %5
  br label %while_init_

while_init_:                                      ; preds = %MainEntry
  br label %while_check_

while_check_:                                     ; preds = %while_body_, %while_init_
  %load_singleid_int_temp = load i32, i32* %i
  %6 = icmp sle i32 %load_singleid_int_temp, 10
  br i1 %6, label %while_body_, label %while_end_

while_body_:                                      ; preds = %while_check_
  %load_singleid_int_temp1 = load i32, i32* %i
  %7 = sub i32 %load_singleid_int_temp1, 5
  %8 = getelementptr i32, i32* %myarray, i32 %7
  %load_array_ref_int_temp = load i32, i32* %8
  %9 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int, i32 0, i32 0), i32 %load_array_ref_int_temp)
  %load_singleid_int_temp2 = load i32, i32* %i
  %expr_plus_expr_tmp = add i32 %load_singleid_int_temp2, 1
  store i32 %expr_plus_expr_tmp, i32* %i
  br label %while_check_

while_end_:                                       ; preds = %while_check_
  br label %EndEntry

EndEntry:                                         ; preds = %while_end_
  ret void
}
