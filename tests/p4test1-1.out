; ModuleID = 'module-boris-input'
source_filename = "module-boris-input"
target triple = "x86_64-pc-linux-gnu"

@format_int = private unnamed_addr constant [4 x i8] c"%d\0A\00"

define i32 @strlen(i8* %s) {
init:
  %i = alloca i32
  store i32 0, i32* %i
  br label %check

check:                                            ; preds = %body, %init
  %0 = load i32, i32* %i
  %1 = getelementptr i8, i8* %s, i32 %0
  %2 = load i8, i8* %1
  %3 = icmp ne i8 0, %2
  br i1 %3, label %body, label %end

body:                                             ; preds = %check
  %4 = load i32, i32* %i
  %5 = add i32 %4, 1
  store i32 %5, i32* %i
  br label %check

end:                                              ; preds = %check
  %6 = load i32, i32* %i
  ret i32 %6
}

declare i32 @printf(...)

define void @main() {
MainEntry:
  %outloop = alloca i32
  store i32 3, i32* %outloop
  %innerloop = alloca i32
  store i32 11, i32* %innerloop
  %i = alloca i32
  store i32 0, i32* %i
  %j = alloca i32
  store i32 0, i32* %j
  br label %while_init_

while_init_:                                      ; preds = %MainEntry
  br label %while_check_

while_check_:                                     ; preds = %while_end_6, %while_init_
  %load_singleid_int_temp = load i32, i32* %i
  %load_singleid_int_temp1 = load i32, i32* %outloop
  %0 = icmp sle i32 %load_singleid_int_temp, %load_singleid_int_temp1
  br i1 %0, label %while_body_, label %while_end_

while_body_:                                      ; preds = %while_check_
  %load_singleid_int_temp2 = load i32, i32* %i
  %expr_plus_expr_tmp = add i32 %load_singleid_int_temp2, 1
  store i32 %expr_plus_expr_tmp, i32* %i
  store i32 1, i32* %j
  br label %while_init_3

while_end_:                                       ; preds = %while_check_
  br label %EndEntry

while_init_3:                                     ; preds = %while_body_
  br label %while_check_4

while_check_4:                                    ; preds = %while_body_5, %while_init_3
  %load_singleid_int_temp7 = load i32, i32* %j
  %load_singleid_int_temp8 = load i32, i32* %innerloop
  %1 = icmp slt i32 %load_singleid_int_temp7, %load_singleid_int_temp8
  br i1 %1, label %while_body_5, label %while_end_6

while_body_5:                                     ; preds = %while_check_4
  %load_singleid_int_temp9 = load i32, i32* %j
  %2 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int, i32 0, i32 0), i32 %load_singleid_int_temp9)
  %load_singleid_int_temp10 = load i32, i32* %j
  %expr_plus_expr_tmp11 = add i32 %load_singleid_int_temp10, 1
  store i32 %expr_plus_expr_tmp11, i32* %j
  br label %while_check_4

while_end_6:                                      ; preds = %while_check_4
  br label %while_check_

EndEntry:                                         ; preds = %while_end_
  ret void
}
