; ModuleID = 'module-boris-input'
source_filename = "module-boris-input"
target triple = "x86_64-pc-linux-gnu"

@format_int = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.4 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.5 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.6 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.7 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.8 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.9 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.10 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.11 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.12 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.13 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.14 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@format_int.15 = private unnamed_addr constant [4 x i8] c"%d\0A\00"

define i32 @strlen(i8* %s) {
init:
  %i = alloca i32
  store i32 0, i32* %i
  br label %check

check:                                            ; preds = %body, %init
  %0 = load i32, i32* %i
  %1 = getelementptr i8, i8* %s, i32 %0
  %2 = load i8, i8* %1
  %3 = icmp ne i8 0, %2
  br i1 %3, label %body, label %end

body:                                             ; preds = %check
  %4 = load i32, i32* %i
  %5 = add i32 %4, 1
  store i32 %5, i32* %i
  br label %check

end:                                              ; preds = %check
  %6 = load i32, i32* %i
  ret i32 %6
}

declare i32 @printf(...)

define void @main() {
MainEntry:
  %const = alloca i32
  store i32 3, i32* %const
  %x = alloca i32, i32 3
  %load_singleid_int_temp = load i32, i32* %const
  %0 = getelementptr i32, i32* %x, i32 0
  store i32 1, i32* %0
  %1 = getelementptr i32, i32* %x, i32 1
  store i32 2, i32* %1
  %2 = getelementptr i32, i32* %x, i32 2
  store i32 %load_singleid_int_temp, i32* %2
  %y = alloca i32, i32 8
  %3 = getelementptr i32, i32* %x, i32 0
  %4 = load i32, i32* %3
  %5 = getelementptr i32, i32* %x, i32 1
  %6 = load i32, i32* %5
  %7 = getelementptr i32, i32* %x, i32 2
  %8 = load i32, i32* %7
  %9 = getelementptr i32, i32* %x, i32 0
  %10 = load i32, i32* %9
  %11 = getelementptr i32, i32* %x, i32 1
  %12 = load i32, i32* %11
  %13 = getelementptr i32, i32* %x, i32 2
  %14 = load i32, i32* %13
  %15 = getelementptr i32, i32* %y, i32 0
  store i32 0, i32* %15
  %16 = getelementptr i32, i32* %y, i32 1
  store i32 %4, i32* %16
  %17 = getelementptr i32, i32* %y, i32 2
  store i32 %6, i32* %17
  %18 = getelementptr i32, i32* %y, i32 3
  store i32 %8, i32* %18
  %19 = getelementptr i32, i32* %y, i32 4
  store i32 4, i32* %19
  %20 = getelementptr i32, i32* %y, i32 5
  store i32 %10, i32* %20
  %21 = getelementptr i32, i32* %y, i32 6
  store i32 %12, i32* %21
  %22 = getelementptr i32, i32* %y, i32 7
  store i32 %14, i32* %22
  %i = alloca i32
  store i32 0, i32* %i
  %23 = getelementptr i32, i32* %y, i32 0
  %load_tuple_ref_int_temp = load i32, i32* %23
  %24 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int, i32 0, i32 0), i32 %load_tuple_ref_int_temp)
  %25 = getelementptr i32, i32* %y, i32 1
  %load_tuple_ref_int_temp1 = load i32, i32* %25
  %26 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.1, i32 0, i32 0), i32 %load_tuple_ref_int_temp1)
  %27 = getelementptr i32, i32* %y, i32 2
  %load_tuple_ref_int_temp2 = load i32, i32* %27
  %28 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.2, i32 0, i32 0), i32 %load_tuple_ref_int_temp2)
  %29 = getelementptr i32, i32* %y, i32 3
  %load_tuple_ref_int_temp3 = load i32, i32* %29
  %30 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.3, i32 0, i32 0), i32 %load_tuple_ref_int_temp3)
  %31 = getelementptr i32, i32* %y, i32 4
  %load_tuple_ref_int_temp4 = load i32, i32* %31
  %32 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.4, i32 0, i32 0), i32 %load_tuple_ref_int_temp4)
  %33 = getelementptr i32, i32* %y, i32 5
  %load_tuple_ref_int_temp5 = load i32, i32* %33
  %34 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.5, i32 0, i32 0), i32 %load_tuple_ref_int_temp5)
  %35 = getelementptr i32, i32* %y, i32 6
  %load_tuple_ref_int_temp6 = load i32, i32* %35
  %36 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.6, i32 0, i32 0), i32 %load_tuple_ref_int_temp6)
  %37 = getelementptr i32, i32* %y, i32 7
  %load_tuple_ref_int_temp7 = load i32, i32* %37
  %38 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.7, i32 0, i32 0), i32 %load_tuple_ref_int_temp7)
  %39 = getelementptr i32, i32* %y, i32 5
  store i32 555, i32* %39
  %40 = getelementptr i32, i32* %y, i32 6
  store i32 666, i32* %40
  %41 = getelementptr i32, i32* %y, i32 7
  store i32 777, i32* %41
  %42 = getelementptr i32, i32* %y, i32 0
  %load_tuple_ref_int_temp8 = load i32, i32* %42
  %43 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.8, i32 0, i32 0), i32 %load_tuple_ref_int_temp8)
  %44 = getelementptr i32, i32* %y, i32 1
  %load_tuple_ref_int_temp9 = load i32, i32* %44
  %45 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.9, i32 0, i32 0), i32 %load_tuple_ref_int_temp9)
  %46 = getelementptr i32, i32* %y, i32 2
  %load_tuple_ref_int_temp10 = load i32, i32* %46
  %47 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.10, i32 0, i32 0), i32 %load_tuple_ref_int_temp10)
  %48 = getelementptr i32, i32* %y, i32 3
  %load_tuple_ref_int_temp11 = load i32, i32* %48
  %49 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.11, i32 0, i32 0), i32 %load_tuple_ref_int_temp11)
  %50 = getelementptr i32, i32* %y, i32 4
  %load_tuple_ref_int_temp12 = load i32, i32* %50
  %51 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.12, i32 0, i32 0), i32 %load_tuple_ref_int_temp12)
  %52 = getelementptr i32, i32* %y, i32 5
  %load_tuple_ref_int_temp13 = load i32, i32* %52
  %53 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.13, i32 0, i32 0), i32 %load_tuple_ref_int_temp13)
  %54 = getelementptr i32, i32* %y, i32 6
  %load_tuple_ref_int_temp14 = load i32, i32* %54
  %55 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.14, i32 0, i32 0), i32 %load_tuple_ref_int_temp14)
  %56 = getelementptr i32, i32* %y, i32 7
  %load_tuple_ref_int_temp15 = load i32, i32* %56
  %57 = call i32 (...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @format_int.15, i32 0, i32 0), i32 %load_tuple_ref_int_temp15)
  br label %EndEntry

EndEntry:                                         ; preds = %MainEntry
  ret void
}
